{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\n\nvar ParticleView = /*#__PURE__*/function (_React$Component) {\n  _inherits(ParticleView, _React$Component);\n\n  var _super = _createSuper(ParticleView);\n\n  function ParticleView() {\n    _classCallCheck(this, ParticleView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ParticleView, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Particles, {\n        className: \"particles\",\n        params: {\n          \"particles\": {\n            \"number\": {\n              \"value\": 355,\n              \"density\": {\n                \"enable\": true,\n                \"value_area\": 789.1476416322727\n              }\n            },\n            \"color\": {\n              \"value\": \"#ffffff\"\n            },\n            \"shape\": {\n              \"type\": \"circle\",\n              \"stroke\": {\n                \"width\": 0,\n                \"color\": \"#000000\"\n              },\n              \"polygon\": {\n                \"nb_sides\": 5\n              },\n              \"image\": {\n                \"src\": \"img/github.svg\",\n                \"width\": 100,\n                \"height\": 100\n              }\n            },\n            \"opacity\": {\n              \"value\": 0.48927153781200905,\n              \"random\": false,\n              \"anim\": {\n                \"enable\": true,\n                \"speed\": 0.2,\n                \"opacity_min\": 0,\n                \"sync\": false\n              }\n            },\n            \"size\": {\n              \"value\": 2,\n              \"random\": true,\n              \"anim\": {\n                \"enable\": true,\n                \"speed\": 2,\n                \"size_min\": 0,\n                \"sync\": false\n              }\n            },\n            \"line_linked\": {\n              \"enable\": false,\n              \"distance\": 150,\n              \"color\": \"#ffffff\",\n              \"opacity\": 0.4,\n              \"width\": 1\n            },\n            \"move\": {\n              \"enable\": true,\n              \"speed\": 0.2,\n              \"direction\": \"none\",\n              \"random\": true,\n              \"straight\": false,\n              \"out_mode\": \"out\",\n              \"bounce\": false,\n              \"attract\": {\n                \"enable\": false,\n                \"rotateX\": 600,\n                \"rotateY\": 1200\n              }\n            }\n          },\n          \"interactivity\": {\n            \"detect_on\": \"canvas\",\n            \"events\": {\n              \"onhover\": {\n                \"enable\": true,\n                \"mode\": \"bubble\"\n              },\n              \"onclick\": {\n                \"enable\": true,\n                \"mode\": \"push\"\n              },\n              \"resize\": true\n            },\n            \"modes\": {\n              \"grab\": {\n                \"distance\": 400,\n                \"line_linked\": {\n                  \"opacity\": 1\n                }\n              },\n              \"bubble\": {\n                \"distance\": 83.91608391608392,\n                \"size\": 1,\n                \"duration\": 3,\n                \"opacity\": 1,\n                \"speed\": 3\n              },\n              \"repulse\": {\n                \"distance\": 200,\n                \"duration\": 0.4\n              },\n              \"push\": {\n                \"particles_nb\": 4\n              },\n              \"remove\": {\n                \"particles_nb\": 2\n              }\n            }\n          },\n          \"retina_detect\": true\n        }\n      });\n    }\n  }]);\n\n  return ParticleView;\n}(React.Component);\n\nexport default ParticleView;","map":null,"metadata":{},"sourceType":"module"}